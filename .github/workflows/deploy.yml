name: Deploy React App with AWS CDK (Staging & Production)

on:
  push:
    branches:
      - main
      - live
  workflow_dispatch:

permissions:
  id-token: write # required for OIDC
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      CDK_APP_PATH: ./cdk
      # Automatically pick environment based on branch
      APP_ENV: ${{ github.ref_name == 'live' && 'production' || 'staging' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Display environment info
        run: |
          echo "Branch: $GITHUB_REF_NAME"
          echo "App Env: $APP_ENV"

      # -------------------------------
      # Build React App (output: dist/)
      # -------------------------------
      - name: Install React dependencies
        run: npm ci

      - name: Build React app
        run: |
          echo "REACT_APP_ENV=$APP_ENV" >> $GITHUB_ENV
          npm run build

      # -------------------------------
      # Configure AWS credentials via OIDC
      # -------------------------------
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ github.ref_name == 'live' && 'arn:aws:iam::<ACCOUNT_ID>:role/GitHubActionsDeployRole-Prod' || 'arn:aws:iam::<ACCOUNT_ID>:role/GitHubActionsDeployRole-Staging' }}
          aws-region: ${{ env.AWS_REGION }}

      # -------------------------------
      # Install CDK dependencies
      # -------------------------------
      - name: Install CDK dependencies
        working-directory: ${{ env.CDK_APP_PATH }}
        run: npm ci

      # -------------------------------
      # Verify CDK sees stacks
      # -------------------------------
      - name: Verify CDK stack visibility
        working-directory: ${{ env.CDK_APP_PATH }}
        run: |
          echo "Verifying CDK app from $(pwd)"
          if ! npx cdk ls; then
            echo "❌ No CDK stacks detected — check bin/app.ts or env variable setup."
            exit 1
          fi

      # -------------------------------
      # Build & Deploy CDK Stack
      # -------------------------------
      - name: Build & Deploy CDK Stack
        working-directory: ${{ env.CDK_APP_PATH }}
        run: |
          echo "Running CDK from $(pwd)"
          npm run build
          echo "Bootstrapping account..."
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          npx cdk bootstrap aws://$ACCOUNT_ID/${AWS_REGION}
          echo "Deploying stack ReactHostingStack-${APP_ENV}..."
          npx cdk deploy ReactHostingStack-${APP_ENV} --require-approval never

      # -------------------------------
      # Show CDK Outputs
      # -------------------------------
      - name: Display CDK Outputs
        working-directory: ${{ env.CDK_APP_PATH }}
        run: |
          echo "Stack outputs:"
          npx cdk outputs
